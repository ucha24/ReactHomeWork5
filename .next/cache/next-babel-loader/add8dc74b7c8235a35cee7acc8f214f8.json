{"ast":null,"code":"var _jsxFileName = \"D:\\\\personal\\\\react\\\\react_group_1\\\\homework2\\\\src\\\\components\\\\Dashboard\\\\Statistic\\\\Statistic.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactCountryFlag from \"react-country-flag\";\nimport NumberFormat from 'react-number-format';\nimport axios from \"axios\";\nimport Link from 'next/link';\nimport './Statistic.scss';\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    height: '82vh'\n  }\n};\n\nconst Statistic = ({\n  data,\n  setSelect,\n  pageSelect,\n  search,\n  filtered\n}) => {\n  _s();\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [modalData, setModalData] = React.useState([]);\n  let countries = [];\n\n  if (data.Countries) {\n    countries = data.Countries;\n  }\n\n  function openModal(code) {\n    setIsOpen(true);\n    axios.get(`https://api.covid19api.com/total/country/${code}`).then(response => {\n      setModalData(response.data);\n    }).catch(() => {\n      console.error('Error');\n    });\n  }\n\n  function afterOpenModal() {\n    return true;\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n    setModalData([]);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"statistic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"infected-country-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"\\u10E3\\u10D0\\u10EE\\u10DA\\u10D4\\u10E1\\u10D8 \\u10E1\\u10E2\\u10D0\\u10E2\\u10D8\\u10E1\\u10E2\\u10D8\\u10D9\\u10D0\"), __jsx(\"div\", {\n    className: \"btn export\",\n    onClick: () => window.open(\"https://api.covid19api.com/export\", \"_blank\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, \"EXPOT.RAR\"), __jsx(\"div\", {\n    className: \"sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"search\",\n    placeholder: \"\\u10EB\\u10D4\\u10D1\\u10DC\\u10D0...\",\n    onInput: event => search(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }), __jsx(\"select\", {\n    name: \"page\",\n    onChange: event => setSelect(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, __jsx(\"option\", {\n    value: \"25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, \"25\"), __jsx(\"option\", {\n    value: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, \"50\"), __jsx(\"option\", {\n    value: \"75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, \"75\"), __jsx(\"option\", {\n    value: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, \"100\"), __jsx(\"option\", {\n    value: \"200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, \"200\")))), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, \"\\u10E5\\u10D5\\u10D4\\u10E7\\u10D0\\u10DC\\u10D0\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \"\\u10E1\\u10E3\\u10DA \\u10D3\\u10D0\\u10D8\\u10DC\\u10E4\\u10D8\\u10EA\\u10D8\\u10E0\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"\\u10D3\\u10E6\\u10D4\\u10E1 \\u10D3\\u10D0\\u10D8\\u10DC\\u10E4\\u10D8\\u10EA\\u10D8\\u10E0\\u10D4\\u10D1\\u10E3\\u10DA\\u10D0\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, \"\\u10D3\\u10E6\\u10D4\\u10E1 \\u10D2\\u10D0\\u10E0\\u10D3\\u10D0\\u10D8\\u10EA\\u10D5\\u10D0\\u10DA\\u10D0\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"\\u10D3\\u10E6\\u10D4\\u10E1 \\u10D2\\u10D0\\u10DB\\u10DD\\u10EF\\u10D0\\u10DC\\u10DB\\u10E0\\u10D7\\u10D4\\u10DA\\u10D3\\u10D0\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, \"\\u10E1\\u10E3\\u10DA \\u10D2\\u10D0\\u10E0\\u10D3\\u10D0\\u10D8\\u10EA\\u10D5\\u10DA\\u10D8\\u10DA\\u10D8\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, \"\\u10E1\\u10E3\\u10DA \\u10D2\\u10D0\\u10DB\\u10DD\\u10EF\\u10D0\\u10DC\\u10DB\\u10E0\\u10D7\\u10D4\\u10DA\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"\\u10E5\\u10DB\\u10D4\\u10D3\\u10D4\\u10D1\\u10D0\")))), __jsx(\"div\", {\n    className: \"table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, countries.sort((a, b) => b.TotalConfirmed - a.TotalConfirmed).filter(e => e.Country.toLowerCase().includes(filtered.toLowerCase())).slice(0, pageSelect).map((data, i) => __jsx(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 41\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 45\n    }\n  }, __jsx(\"div\", {\n    className: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }\n  }, __jsx(ReactCountryFlag, {\n    countryCode: data.CountryCode,\n    svg: true,\n    style: {\n      width: '1.5rem',\n      height: '1.5rem',\n      marginRight: '0.5rem'\n    },\n    title: data.Country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 53\n    }\n  }), data.Country)), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 45\n    }\n  }, __jsx(NumberFormat, {\n    value: data.TotalConfirmed,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 49\n    }\n  })), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 45\n    }\n  }, __jsx(NumberFormat, {\n    value: data.NewConfirmed,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 49\n    }\n  })), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 45\n    }\n  }, __jsx(\"span\", {\n    className: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 49\n    }\n  }, \"+\", __jsx(NumberFormat, {\n    value: data.NewDeaths,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 53\n    }\n  }))), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 45\n    }\n  }, __jsx(\"span\", {\n    className: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 49\n    }\n  }, \"-\", __jsx(NumberFormat, {\n    value: data.NewRecovered,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 49\n    }\n  }))), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 45\n    }\n  }, __jsx(NumberFormat, {\n    value: data.TotalDeaths,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 49\n    }\n  })), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 45\n    }\n  }, __jsx(NumberFormat, {\n    value: data.TotalRecovered,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 49\n    }\n  })), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  }, __jsx(Link, {\n    href: \"/countries/[country]\",\n    as: `countries/${data.CountryCode}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 47\n    }\n  }, __jsx(\"div\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 49\n    }\n  }, \"\\u10DC\\u10D0\\u10EE\\u10D5\\u10D0\")))))))))));\n};\n\n_s(Statistic, \"MgoNVGmp1bF6zOv/qNbcyprgHc8=\");\n\n_c = Statistic;\nexport default Statistic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistic\");","map":{"version":3,"sources":["D:/personal/react/react_group_1/homework2/src/components/Dashboard/Statistic/Statistic.jsx"],"names":["React","ReactCountryFlag","NumberFormat","axios","Link","customStyles","content","top","left","right","bottom","marginRight","transform","height","Statistic","data","setSelect","pageSelect","search","filtered","modalIsOpen","setIsOpen","useState","modalData","setModalData","countries","Countries","openModal","code","get","then","response","catch","console","error","afterOpenModal","closeModal","window","open","event","target","value","sort","a","b","TotalConfirmed","filter","e","Country","toLowerCase","includes","slice","map","i","CountryCode","width","NewConfirmed","NewDeaths","NewRecovered","TotalDeaths","TotalRecovered"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactCountryFlag from \"react-country-flag\";\r\nimport NumberFormat from 'react-number-format';\r\nimport axios from \"axios\";\r\nimport Link from 'next/link'\r\n\r\nimport './Statistic.scss';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      height: '82vh'\r\n    }\r\n  };\r\n\r\nconst Statistic = ({ data, setSelect, pageSelect, search, filtered }) => {\r\n    const [modalIsOpen,setIsOpen] = React.useState(false);\r\n    const [modalData,setModalData] = React.useState([]);\r\n    let countries = [];\r\n    if (data.Countries) {\r\n        countries = data.Countries;\r\n    }\r\n\r\n    function openModal( code ) {\r\n        setIsOpen(true);\r\n        axios\r\n            .get(`https://api.covid19api.com/total/country/${code}`)\r\n            .then((response) => {\r\n                setModalData(response.data);\r\n\r\n            })\r\n            .catch(() => {\r\n                console.error('Error');\r\n            });\r\n      }\r\n\r\n      function afterOpenModal() {\r\n        return true;\r\n      }\r\n\r\n      function closeModal(){\r\n        setIsOpen(false);\r\n        setModalData([]);\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"statistic\">\r\n                <div className=\"infected-country-wrapper\">\r\n                    <div className=\"head\">\r\n                        <h1>უახლესი სტატისტიკა</h1>\r\n                            <div className='btn export' onClick={()=> window.open(\"https://api.covid19api.com/export\", \"_blank\")}>EXPOT.RAR</div>\r\n\r\n                        <div className=\"sort\">\r\n                            <input type=\"text\" name='search' placeholder='ძებნა...' onInput={(event)=> search(event.target.value)}/>\r\n\r\n                            <select name=\"page\" onChange={(event) => setSelect(event.target.value)}>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"50\">50</option>\r\n                                <option value=\"75\">75</option>\r\n                                <option value=\"100\">100</option>\r\n                                <option value=\"200\">200</option>\r\n                            </select>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ქვეყანა</th>\r\n                                <th>სულ დაინფიცირებული</th>\r\n                                <th>დღეს დაინფიცირებულა</th>\r\n                                <th>დღეს გარდაიცვალა</th>\r\n                                <th>დღეს გამოჯანმრთელდა</th>\r\n                                <th>სულ გარდაიცვლილი</th>\r\n                                <th>სულ გამოჯანმრთელებული</th>\r\n                                <th>ქმედება</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n\r\n                    <div className=\"table-wrapper\">\r\n                        <table>\r\n                            <tbody>\r\n                                {countries.sort((a, b) => b.TotalConfirmed - a.TotalConfirmed)\r\n                                    .filter(e => e.Country.toLowerCase().includes(filtered.toLowerCase()))\r\n                                    .slice(0, pageSelect)\r\n                                    .map((data, i) =>\r\n                                        <tr key={i}>\r\n                                            <td>\r\n                                                <div className=\"country\">\r\n                                                    <ReactCountryFlag countryCode={data.CountryCode} svg style={{\r\n                                                        width: '1.5rem',\r\n                                                        height: '1.5rem',\r\n                                                        marginRight: '0.5rem'\r\n                                                    }}\r\n                                                        title={data.Country} />\r\n                                                    {data.Country}\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <NumberFormat\r\n                                                    value={data.TotalConfirmed}\r\n                                                    thousandSeparator={true}\r\n                                                    displayType={'text'}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <NumberFormat\r\n                                                    value={data.NewConfirmed}\r\n                                                    thousandSeparator={true}\r\n                                                    displayType={'text'}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                                <span className='red'>+\r\n                                                    <NumberFormat\r\n                                                        value={data.NewDeaths}\r\n                                                        thousandSeparator={true}\r\n                                                        displayType={'text'}\r\n                                                    />\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <span className='green'>-\r\n\r\n                                                <NumberFormat\r\n                                                    value={data.NewRecovered}\r\n                                                    thousandSeparator={true}\r\n                                                    displayType={'text'}\r\n                                                />\r\n                                                </span>\r\n                                            </td>\r\n                                            <td>\r\n                                                <NumberFormat\r\n                                                    value={data.TotalDeaths}\r\n                                                    thousandSeparator={true}\r\n                                                    displayType={'text'}\r\n                                                /></td>\r\n                                            <td>\r\n                                                <NumberFormat\r\n                                                    value={data.TotalRecovered}\r\n                                                    thousandSeparator={true}\r\n                                                    displayType={'text'}\r\n                                                />\r\n                                            </td>\r\n                                            <td>\r\n                                              <Link href=\"/countries/[country]\" as={`countries/${data.CountryCode}`}>\r\n                                                <div className='btn'>\r\n                                                  ნახვა\r\n                                                  </div>\r\n                                                </Link>\r\n                                          </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Statistic;\r\n"]},"metadata":{},"sourceType":"module"}