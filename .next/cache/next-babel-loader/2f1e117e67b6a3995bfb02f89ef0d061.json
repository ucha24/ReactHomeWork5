{"ast":null,"code":"var _jsxFileName = \"D:\\\\personal\\\\react\\\\react_group_1\\\\homework2\\\\src\\\\components\\\\Dashboard\\\\GlobalInfo\\\\GlobalInfo.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport NumberFormat from 'react-number-format';\nimport './GlobalInfo.scss';\n\nfunction GlobalInfo({\n  data\n}) {\n  let globalData = [];\n\n  if (data.Global) {\n    globalData = data.Global;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"global-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, __jsx(\"li\", {\n    className: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, \"\\u10E1\\u10E3\\u10DA \\u10D8\\u10DC\\u10E4\\u10D8\\u10EA\\u10D8\\u10E0\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\"), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }\n  }, (globalData.NewConfirmed / globalData.TotalConfirmed * 100).toFixed(2), \"%\"), __jsx(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }\n  }, __jsx(NumberFormat, {\n    value: globalData.TotalConfirmed,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"today\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 33\n    }\n  }, __jsx(NumberFormat, {\n    value: globalData.NewConfirmed,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 37\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 37\n    }\n  }, \" \\u10D3\\u10E6\\u10D4\\u10E1\"))))), __jsx(\"li\", {\n    className: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, \"\\u10D2\\u10D0\\u10DB\\u10DD\\u10EF\\u10D0\\u10DC\\u10DB\\u10E0\\u10D7\\u10D4\\u10DA\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\"), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, (globalData.NewRecovered / globalData.TotalRecovered * 100).toFixed(2), \"%\"), __jsx(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, __jsx(NumberFormat, {\n    value: globalData.TotalRecovered,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"today\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, __jsx(NumberFormat, {\n    value: globalData.NewRecovered,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }, \" \\u10D3\\u10E6\\u10D4\\u10E1\"))))), __jsx(\"li\", {\n    className: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"\\u10D0\\u10DB\\u10DF\\u10D0\\u10DB\\u10D0\\u10D3 \\u10D3\\u10D0\\u10D0\\u10D5\\u10D0\\u10D3\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\"), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, ((globalData.TotalConfirmed - globalData.TotalRecovered - globalData.TotalDeaths) / globalData.TotalConfirmed * 100).toFixed(2), \"%\"), __jsx(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, __jsx(NumberFormat, {\n    value: globalData.TotalConfirmed - globalData.TotalRecovered - globalData.TotalDeaths,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }))))), __jsx(\"li\", {\n    className: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"\\u10D2\\u10D0\\u10E0\\u10D3\\u10D0\\u10EA\\u10D5\\u10DA\\u10D8\\u10DA\\u10D8\"), __jsx(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, (globalData.NewDeaths / globalData.TotalDeaths * 100).toFixed(2), \"%\"), __jsx(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, __jsx(NumberFormat, {\n    value: globalData.TotalDeaths,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  })), __jsx(\"div\", {\n    className: \"today\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, __jsx(NumberFormat, {\n    value: globalData.NewDeaths,\n    thousandSeparator: true,\n    displayType: 'text',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }, \" \\u10D3\\u10E6\\u10D4\\u10E1\"))))))));\n}\n\n_c = GlobalInfo;\nexport default GlobalInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalInfo\");","map":{"version":3,"sources":["D:/personal/react/react_group_1/homework2/src/components/Dashboard/GlobalInfo/GlobalInfo.jsx"],"names":["React","NumberFormat","GlobalInfo","data","globalData","Global","NewConfirmed","TotalConfirmed","toFixed","NewRecovered","TotalRecovered","TotalDeaths","NewDeaths"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,OAAO,mBAAP;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA8B;AAC1B,MAAIC,UAAU,GAAG,EAAjB;;AACA,MAAID,IAAI,CAACE,MAAT,EAAiB;AACbD,IAAAA,UAAU,GAAGD,IAAI,CAACE,MAAlB;AACH;;AAED,SACI,4BACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,CAAED,UAAU,CAACE,YAAX,GAA0BF,UAAU,CAACG,cAAtC,GAAwD,GAAzD,EAA8DC,OAA9D,CAAsE,CAAtE,CAA7B,MADJ,EAGI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEJ,UAAU,CAACG,cAAhC;AAAgD,IAAA,iBAAiB,EAAE,IAAnE;AAAyE,IAAA,WAAW,EAAE,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEH,UAAU,CAACE,YAAhC;AAA8C,IAAA,iBAAiB,EAAE,IAAjE;AAAuE,IAAA,WAAW,EAAE,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,CAJJ,CAHJ,CAFJ,CADJ,EAiBI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,CAAEF,UAAU,CAACK,YAAX,GAA0BL,UAAU,CAACM,cAAtC,GAAwD,GAAzD,EAA8DF,OAA9D,CAAsE,CAAtE,CAA7B,MADA,EAGI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEJ,UAAU,CAACM,cAAhC;AAAgD,IAAA,iBAAiB,EAAE,IAAnE;AAAyE,IAAA,WAAW,EAAE,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEN,UAAU,CAACK,YAAhC;AAA8C,IAAA,iBAAiB,EAAE,IAAjE;AAAuE,IAAA,WAAW,EAAE,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,CAJJ,CAHJ,CAFJ,CAjBJ,EAiCI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,CAAE,CAACL,UAAU,CAACG,cAAX,GAA4BH,UAAU,CAACM,cAAvC,GAAwDN,UAAU,CAACO,WAApE,IAAmFP,UAAU,CAACG,cAA/F,GAAiH,GAAlH,EAAuHC,OAAvH,CAA+H,CAA/H,CAA7B,MADA,EAGI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEJ,UAAU,CAACG,cAAX,GAA4BH,UAAU,CAACM,cAAvC,GAAwDN,UAAU,CAACO,WAAxF;AAAqG,IAAA,iBAAiB,EAAE,IAAxH;AAA8H,IAAA,WAAW,EAAE,MAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAHJ,CAFJ,CAjCJ,EA6CI;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,CAAEP,UAAU,CAACQ,SAAX,GAAuBR,UAAU,CAACO,WAAnC,GAAkD,GAAnD,EAAwDH,OAAxD,CAAgE,CAAhE,CAA7B,MADA,EAGI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEJ,UAAU,CAACO,WAAhC;AAA6C,IAAA,iBAAiB,EAAE,IAAhE;AAAsE,IAAA,WAAW,EAAE,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEP,UAAU,CAACQ,SAAhC;AAA2C,IAAA,iBAAiB,EAAE,IAA9D;AAAoE,IAAA,WAAW,EAAE,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,CAJJ,CAHJ,CAFJ,CA7CJ,CADJ,CADJ,CADJ;AAoEH;;KA1EQV,U;AA4ET,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nimport './GlobalInfo.scss';\r\n\r\nfunction GlobalInfo({ data }) {\r\n    let globalData = [];\r\n    if (data.Global) {\r\n        globalData = data.Global;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"global-info\">\r\n                <ul>\r\n                    <li className='blue'>\r\n                        <h1>სულ ინფიცირებული</h1>\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"percentage\">{((globalData.NewConfirmed / globalData.TotalConfirmed) * 100).toFixed(2)}%</div>\r\n\r\n                            <div className=\"right\">\r\n                                <div className=\"total\">\r\n                                    <NumberFormat value={globalData.TotalConfirmed} thousandSeparator={true} displayType={'text'} />\r\n                                </div>\r\n                                <div className=\"today\">\r\n                                    <NumberFormat value={globalData.NewConfirmed} thousandSeparator={true} displayType={'text'} />\r\n                                    <span> დღეს</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className='green'>\r\n                        <h1>გამოჯანმრთელებული</h1>\r\n                        <div className=\"wrapper\">\r\n                        <div className=\"percentage\">{((globalData.NewRecovered / globalData.TotalRecovered) * 100).toFixed(2)}%</div>\r\n\r\n                            <div className=\"right\">\r\n                                <div className=\"total\">\r\n                                    <NumberFormat value={globalData.TotalRecovered} thousandSeparator={true} displayType={'text'} />\r\n                                </div>\r\n                                <div className=\"today\">\r\n                                    <NumberFormat value={globalData.NewRecovered} thousandSeparator={true} displayType={'text'} />\r\n                                    <span> დღეს</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className='yellow'>\r\n                        <h1>ამჟამად დაავადებული</h1>\r\n                        <div className=\"wrapper\">\r\n                        <div className=\"percentage\">{(((globalData.TotalConfirmed - globalData.TotalRecovered - globalData.TotalDeaths) / globalData.TotalConfirmed) * 100).toFixed(2)}%</div>\r\n\r\n                            <div className=\"right\">\r\n                                <div className=\"total\">\r\n                                    <NumberFormat value={globalData.TotalConfirmed - globalData.TotalRecovered - globalData.TotalDeaths} thousandSeparator={true} displayType={'text'} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className='red'>\r\n                        <h1>გარდაცვლილი</h1>\r\n                        <div className=\"wrapper\">\r\n                        <div className=\"percentage\">{((globalData.NewDeaths / globalData.TotalDeaths) * 100).toFixed(2)}%</div>\r\n\r\n                            <div className=\"right\">\r\n                                <div className=\"total\">\r\n                                    <NumberFormat value={globalData.TotalDeaths} thousandSeparator={true} displayType={'text'} />\r\n                                </div>\r\n                                <div className=\"today\">\r\n                                    <NumberFormat value={globalData.NewDeaths} thousandSeparator={true} displayType={'text'} />\r\n                                    <span> დღეს</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GlobalInfo;"]},"metadata":{},"sourceType":"module"}